Loading script...

Starting tests...
Checking ucfirst
ucfirst - 'test' OK
ucfirst - ' test' OK
ucfirst - 'Test' OK
ucfirst - 'TEST' OK
ucfirst - 'null' OK
ucfirst - 'Object' OK

Checking capitalize
capitalize - 'test' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
capitalize - ' test' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
capitalize - 'ipsum DOLOR' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
capitalize - 'sit 8met consectetur' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
capitalize - '_dipiscing elit' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
capitalize - 'null' OK
capitalize - 'Object' OK

Checking camelCase
camelCase - 'toggle case is the coolest' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
camelCase - 'toggleCase is the coolest' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
camelCase - 'ToggleCase is the 3oolest' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
camelCase - 'ToggleCaseIsTheCoolest' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
camelCase - 'ToggleCase is_the coolest' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
camelCase - ' toggleCase' KO
	Unexpected behaviour : ReferenceError - uc_first is not defined
camelCase - 'null' OK
camelCase - 'Object' OK

Checking snake_case
snake_case - 'toggle case is the coolest' OK
snake_case - 'toggleCase is the coolest' OK
snake_case - 'ToggleCase is the 3oolest' OK
snake_case - 'ToggleCaseIsTheCool3st' OK
snake_case - 'ToggleCase is_the coolest' OK
snake_case - ' toggleCase' OK
snake_case - 'null' OK
snake_case - 'Object' OK

Checking leet
leet - 'anaconda' OK
leet - 'anacoNDa' OK
leet - 'leet' OK
leet - 'yoda' OK
leet - 'evaluation' OK
leet - 'mon travail' OK
leet - ' ' OK
leet - 'null' OK
leet - 'Object' OK

Checking verlan
verlan - 'anaconda' OK
verlan - 'kayak' OK
verlan - 'yoda m Luke' OK
verlan - '70da m L(_)k3' OK
verlan - ' ' OK
verlan - 'null' OK
verlan - 'Object' OK

Checking yoda
yoda - 'anaconda' OK
yoda - 'yoda m Luke' OK
yoda - 'Inverser la position des mots dâ€™une phrase' OK
yoda - ' ' OK
yoda - 'null' OK
yoda - 'Object' OK

Checking vig
vig - 'un mot' KO
	expected : "fbhnqcsghnhiywcsbsqzsrsby" - got "FBHNQCSGHNHIYWCSBSQZSRSBY"
vig - 'un mot avec MAJ' KO
	expected : "fbhnqcsghnhiywcsbsqzsrsby" - got "FBHNQCSGHNHIYWCSBSQZSRSBY"
vig - 'une phrase longue' KO
	expected : "hna prueul xqrs prof lknqxi ohmr due no ieqt kewqsylrnp rsrn zibh gcy g dft fucge qn dhwv" - got "HNA:ZKVCZI9GRAS*GRAS*OSPNYD-MWIC-QQI*QI<CITG:WBCBLQMOQX<YMDA:ZIBR:YAB=G<LWS-JQSDR:QN*WIUA"
vig - ' ' KO
	expected : " " - got "3"
vig - 'null' OK
vig - 'Object' OK

Checking prop_access
prop_access - 'path exist - value string' OK
prop_access - 'path exist - value object' OK
prop_access - 'path exist - value array' OK
prop_access - 'path not exist' OK
prop_access - 'path empty' OK
prop_access - 'object null' KO
	expected : test not exist - got null
prop_access - 'path null' OK

